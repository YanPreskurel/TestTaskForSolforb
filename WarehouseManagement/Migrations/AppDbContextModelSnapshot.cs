// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarehouseManagement.Data;

#nullable disable

namespace WarehouseManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WarehouseManagement.Models.Entities.ReceiptDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ReceiptDocuments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            Number = "R001"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2025, 8, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Number = "R002"
                        });
                });

            modelBuilder.Entity("WarehouseManagement.Models.Entities.ReceiptResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReceiptDocumentId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptDocumentId");

                    b.HasIndex("ResourceId");

                    b.HasIndex("UnitId");

                    b.ToTable("ReceiptResources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Quantity = 100m,
                            ReceiptDocumentId = 1,
                            ResourceId = 1,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 2,
                            Quantity = 50m,
                            ReceiptDocumentId = 1,
                            ResourceId = 2,
                            UnitId = 2
                        },
                        new
                        {
                            Id = 3,
                            Quantity = 200m,
                            ReceiptDocumentId = 2,
                            ResourceId = 3,
                            UnitId = 3
                        });
                });

            modelBuilder.Entity("WarehouseManagement.Models.Entities.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Сахар"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Молоко"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Яйца"
                        });
                });

            modelBuilder.Entity("WarehouseManagement.Models.Entities.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Килограмм"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Литр"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Штука"
                        });
                });

            modelBuilder.Entity("WarehouseManagement.Models.Entities.ReceiptResource", b =>
                {
                    b.HasOne("WarehouseManagement.Models.Entities.ReceiptDocument", "ReceiptDocument")
                        .WithMany("ReceiptResources")
                        .HasForeignKey("ReceiptDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseManagement.Models.Entities.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseManagement.Models.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReceiptDocument");

                    b.Navigation("Resource");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("WarehouseManagement.Models.Entities.ReceiptDocument", b =>
                {
                    b.Navigation("ReceiptResources");
                });
#pragma warning restore 612, 618
        }
    }
}
